---
# Source: retroboard/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: retroboard
  labels:
    helm.sh/chart: retroboard-0.1.0
    app.kubernetes.io/name: retroboard
    app.kubernetes.io/instance: retroboard
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: retroboard/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: retroboard
  labels:
    helm.sh/chart: retroboard-0.1.0
    app.kubernetes.io/name: retroboard
    app.kubernetes.io/instance: retroboard
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: retroboard
    app.kubernetes.io/instance: retroboard
---
# Source: retroboard/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: retroboard
  labels:
    helm.sh/chart: retroboard-0.1.0
    app.kubernetes.io/name: retroboard
    app.kubernetes.io/instance: retroboard
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: retroboard
      app.kubernetes.io/instance: retroboard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: retroboard
        app.kubernetes.io/instance: retroboard
    spec:
      serviceAccountName: retroboard
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: retroboard
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "gitea.zengarden.space/zengarden-space/retroboard:main-cca00eb"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-cache-nginx
              mountPath: /var/cache/nginx
            - name: var-run
              mountPath: /var/run
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-cache-nginx
          emptyDir: {}
        - name: var-run
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - retroboard
              topologyKey: kubernetes.io/hostname
            weight: 100
---
# Source: retroboard/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: retroboard
  labels:
    helm.sh/chart: retroboard-0.1.0
    app.kubernetes.io/name: retroboard
    app.kubernetes.io/instance: retroboard
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: retroboard
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
---
# Source: retroboard/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: retroboard
  labels:
    helm.sh/chart: retroboard-0.1.0
    app.kubernetes.io/name: retroboard
    app.kubernetes.io/instance: retroboard
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: external
  rules:
    - host: "retroboard.zengarden.space"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: retroboard
                port:
                  number: 80
